steps:
# Step 1: Clone the repository from GitHub
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/RanjithKuraya/TEMCICD.git']

- name: 'gcr.io/cloud-builders/docker'
  args: ['build',   '-t', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${_SHORT_SHA}','TEMCICD'] # Ensure that this points to the directory containing the Dockerfile
  

- name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${_SHORT_SHA}']

# Push to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'args: ['tag', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${_SHORT_SHA}', 'europe-west3-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:${_SHORT_SHA}']

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west3-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:${_SHORT_SHA}']

# Step 4: Update the Kubernetes deployment to use the newly built Docker image with the tag SHORT_SHA
#- name: 'gcr.io/cloud-builders/kubectl'
#  args: [
#    'set',
#    'image',
#    'deployment',
#    'cicd-deploy',
#    'gke-image-sha256-1=gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${SHORT_SHA}'
#    ]
#  env:
#  - 'CLOUDSDK_COMPUTE_ZONE=asia-south1-a'
#  - 'CLOUDSDK_CONTAINER_CLUSTER=cicd-cluster'
    
options:
  logging: CLOUD_LOGGING_ONLY  # Or use NONE if you don't want any logging.

 # Substitutions for the project and image name
substitutions:
  _IMAGE_NAME: 'tem-image'
  _PROJECT_ID: 'glb-fs-wgh-app-dev'
  _REPOSITORY_NAME: 'TEMCICD'

# Specify the Docker image with the SHORT_SHA tag
images:
  - 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${SHORT_SHA}'
